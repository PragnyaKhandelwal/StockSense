#ifndef MAINWINDOW_H
#define MAINWINDOW_H

#include <QMainWindow>
#include <QStackedWidget>
#include <QHBoxLayout>
#include <QVBoxLayout>
#include <QWidget>
#include <QTimer>
#include <QLabel>
#include <QPushButton>

// Forward declarations for UI classes
QT_BEGIN_NAMESPACE
class QWidget;
QT_END_NAMESPACE

// UI class forward declarations (generated by uic)
namespace Ui {
    class Header;
    class Dashboard;
    class Predictions;
    class Settings;
    class QuickStats;
    class SentimentMeter;
    class DataStructuresAnalyzer;
    class NetworkStatus;
    class NewsPanel;
    class AppIcon;
    class AlgorithmMonitor;
    class StockChart;
    class StockStats;
    class StockTicker;
    class Watchlist;
    class StockSidebar;
    class StockSenseLogo;
    class EnhancedSettings;
}

class MainWindow : public QMainWindow
{
    Q_OBJECT

public:
    MainWindow(QWidget *parent = nullptr);
    ~MainWindow();

private slots:
    void onViewChanged(const QString &viewName);
    void onStockSelected(const QString &symbol);
    void updateStockData();

private:
    void setupUI();
    void setupConnections();
    void setupTimer();
    void applyStyles();
    
    // UI components
    QWidget *m_centralWidget;
    QHBoxLayout *m_mainLayout;
    QVBoxLayout *m_contentLayout;
    QStackedWidget *m_contentStack;
    
    // Component widgets
    QWidget *m_headerWidget;
    QWidget *m_sidebarWidget;
    QWidget *m_dashboardWidget;
    QWidget *m_predictionsWidget;
    QWidget *m_settingsWidget;
    QWidget *m_watchlistWidget;
    
    // UI objects
    Ui::Header *m_headerUI;
    Ui::StockSidebar *m_sidebarUI;
    Ui::Dashboard *m_dashboardUI;
    Ui::Predictions *m_predictionsUI;
    Ui::Settings *m_settingsUI;
    Ui::Watchlist *m_watchlistUI;
    
    // Data
    QString m_currentStock;
    QTimer *m_updateTimer;
};

#endif // MAINWINDOW_H
